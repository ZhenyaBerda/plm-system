{"version":3,"sources":["infrastructure/routing/Router.tsx","@types.ts","infrastructure/routing/PrivateRoute.tsx","dataAccess/authConfig.ts","infrastructure/auth/authService.ts","state/appState.ts","pages/Login.tsx","state/selectors.ts","pages/Page.tsx","dataAccess/api.ts","dialogs/CreationPopup.tsx","pages/Groups.tsx","components/DescriptionItem.tsx","components/UserInfoDrawer.tsx","pages/Users.tsx","components/TaskCard.tsx","components/Column.tsx","dialogs/CreateTaskDialog.tsx","components/Board.tsx","dataAccess/initData.ts","pages/Agile.tsx","dialogs/UploadDialog.tsx","pages/Files.tsx","pages/index.tsx","components/Authentification.tsx","App.tsx","state/index.ts","index.tsx"],"names":["Router","children","GRAPH_PATH","LOGIN_PATH","Pages","PrivateRoute","Component","component","render","rest","isAuthenticated","useIsAuthenticated","props","to","pathname","state","from","location","msalConfig","auth","clientId","authority","redirectUri","cache","cacheLocation","storeAuthStateInCookie","system","loggerOptions","loggerCallback","level","message","containsPii","LogLevel","Error","console","error","Info","info","Verbose","debug","Warning","warn","loginRequest","scopes","graphConfig","graphMeEndpoint","setIsAuthenticated","value","callMsGraph","accessToken","a","headers","Headers","bearer","append","options","method","fetch","then","response","json","catch","log","actions","appActions","user","type","LOG_IN","LOG_OUT","SET_AUTHENTICATION_ERROR","initialState","id","firstName","lastName","email","Title","Typography","Text","Login","useMsal","instance","accounts","useState","setError","dispatch","useDispatch","history","handleLogin","isError","loginPopup","e","acquireTokenSilent","account","localStorage","setItem","getItem","userData","givenName","surname","mail","locationState","fromState","replace","className","style","marginTop","color","width","onClick","htmlType","getAuthenticated","getAuthenticationError","authenticationError","getUser","Header","Layout","Content","Sider","Footer","Page","selectedKey","window","useSelector","useHistory","onLogout","useCallback","minHeight","selectedKeys","theme","mode","Item","padding","background","display","alignItems","justifyContent","marginRight","margin","textAlign","getUsers","getUserInfo","userId","getGroupLists","createGroup","group","body","JSON","stringify","getGroupFiles","groupId","getItemPreview","itemId","deleteGroupFile","uploadFile","fileName","content","getGroupPlans","getPlanTasks","planId","getGroupMembers","createTask","task","updateTask","taskId","etag","CreationPopup","isVisible","onClose","onCreate","isLoading","displayName","description","mailEnabled","mailNickname","securityEnabled","setGroup","title","visible","onCancel","confirmLoading","onOk","okText","cancelText","layout","name","label","rules","required","onChange","target","TextArea","Groups","groups","setGroups","showCreationPopup","setShowCreationPopup","setIsLoading","useEffect","map","it","key","handleCreateGroup","closeCreationPopup","columns","dataIndex","align","text","date","Date","toLocaleString","record","size","AppstoreOutlined","FileOutlined","dataSource","footer","DescriptionItem","UserInfoDrawer","setUser","businessPhone","businessPhones","jobTitle","officeLocation","placement","closable","marginBottom","span","Users","users","setUsers","selectedUser","setSelectedUser","showUserInfo","setShowUserInfo","userPrincipalName","UserOutlined","Container","styled","div","TaskCard","index","draggableId","provided","ref","innerRef","draggableProps","dragHandleProps","minWidth","strong","percentComplete","TaskList","isDraggingOver","Column","tasks","borderBottom","backgroundColor","height","droppableId","droppableProps","placeholder","CreateTaskDialog","setVisible","setConfirmLoading","assigmentBy","dueDateTime","setTask","setOptions","handleAssign","open","data","taskModel","res","updateTaskModel","assignments","onDropdownVisibleChange","loading","moment","format","toISOString","Board","setState","visibleNewTask","setVisibleNewTask","icon","PlusOutlined","onDragEnd","result","destination","source","start","finish","startTaskIds","Array","taskIds","splice","newStart","finishTaskIds","newFinish","newState","newTaskIds","newColumn","columnOrder","columnId","column","initialData","Agile","setTasks","setData","setPlanId","useParams","Object","keys","tasksData","push","UploadDialog","onUpload","file","setFile","setFileName","Dragger","disabled","beforeUpload","reader","FileReader","readAsArrayBuffer","onload","InboxOutlined","Files","files","setFiles","showUploader","setShowUploader","getFiles","createdDate","fileSystemInfo","createdDateTime","createdBy","application","lastModifiedDate","lastModifiedDateTime","lastModifiedBy","webUrl","onPreview","url","link","document","createElement","href","setAttribute","appendChild","click","remove","onDelete","item","EyeOutlined","DeleteOutlined","Index","exact","path","authenticate","Authentication","msalInstance","PublicClientApplication","App","store","createStore","action","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.f5a2cc04.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n    children: React.ReactNode;\r\n}\r\n\r\nconst Router = ({ children }: Props) => {\r\n    return (\r\n        <BrowserRouter>\r\n            {children}\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default Router;\r\n","export const API_PATH = 'https://superpupercompany.sharepoint.com';\r\nexport const GRAPH_PATH = 'https://graph.microsoft.com';\r\n\r\nexport const LOGIN_PATH = '/login';\r\nexport const USERS_PATH = '/';\r\nexport const GROUPS_PATH = '/groups';\r\nexport const GROUPS_BOARD_PATH = '/groups/board';\r\n\r\nexport const Pages = {\r\n    LOGIN_PATH,\r\n    USERS_PATH,\r\n    GROUPS_PATH,\r\n    GROUPS_BOARD_PATH\r\n}","import { useIsAuthenticated } from \"@azure/msal-react\";\r\nimport React from \"react\";\r\nimport { Route, Redirect, RouteProps } from \"react-router-dom\";\r\n\r\nimport { LOGIN_PATH } from '../../@types';\r\nimport { isAuthenticated } from \"../auth/authService\";\r\n\r\nconst PrivateRoute = ({ children, component: Component, render, ...rest }: RouteProps) => {\r\n    const isAuthenticated = useIsAuthenticated();\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => {\r\n                if (!isAuthenticated) {\r\n                    return <Redirect to={{ pathname: LOGIN_PATH, state: { from: props.location } }} />;\r\n                }\r\n\r\n                if (Component) {\r\n                    return <Component {...props} />;\r\n                }\r\n                else if (render) {\r\n                    return render(props);\r\n                }\r\n                else {\r\n                    return children;\r\n                }\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { LogLevel } from \"@azure/msal-browser\";\r\nimport { GRAPH_PATH } from \"../@types\";\r\n\r\n/**\r\n * Configuration object to be passed to MSAL instance on creation.\r\n * For a full list of MSAL.js configuration parameters, visit:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/configuration.md\r\n */\r\nexport const msalConfig = {\r\n    auth: {\r\n        clientId: \"a5a76f0a-a6a5-4a0c-b564-6bc0e39716a4\",\r\n        authority: \"https://login.microsoftonline.com/common\",\r\n        redirectUri: \"http://localhost:3000\"\r\n    },\r\n    cache: {\r\n        cacheLocation: \"localStorage\", // This configures where your cache will be stored\r\n        storeAuthStateInCookie: false, // Set this to \"true\" if you are having issues on IE11 or Edge\r\n    },\r\n    system: {\r\n        loggerOptions: {\r\n            loggerCallback: (level: any, message: any, containsPii: any) => {\r\n                if (containsPii) {\r\n                    return;\r\n                }\r\n                switch (level) {\r\n                    case LogLevel.Error:\r\n                        console.error(message);\r\n                        return;\r\n                    case LogLevel.Info:\r\n                        console.info(message);\r\n                        return;\r\n                    case LogLevel.Verbose:\r\n                        console.debug(message);\r\n                        return;\r\n                    case LogLevel.Warning:\r\n                        console.warn(message);\r\n                        return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Scopes you add here will be prompted for user consent during sign-in.\r\n * By default, MSAL.js will add OIDC scopes (openid, profile, email) to any login request.\r\n * For more information about OIDC scopes, visit:\r\n * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes\r\n */\r\nexport const loginRequest = {\r\n    scopes: [\"User.Read\"]\r\n};\r\n\r\n/**\r\n * Add here the scopes to request when obtaining an access token for MS Graph API. For more information, see:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/resources-and-scopes.md\r\n */\r\nexport const graphConfig = {\r\n    graphMeEndpoint: `${GRAPH_PATH}/v1.0/me`\r\n};\r\n","import {graphConfig} from \"../../dataAccess/authConfig\";\r\n\r\nlet _isAuthenticated: boolean | null = null;\r\n\r\nconst tokenKey = '9e29f9e5-41c3-4f09-a408-450c5829a784.c85bffce-e994-4b71-9bb4-7ef86f39211d-login.windows.net-accesstoken-a9922f48-71c7-4f41-b394-09ba1f09608b-c85bffce-e994-4b71-9bb4-7ef86f39211d-openid profile user.read email'\r\n\r\nexport const isAuthenticated = () => _isAuthenticated;\r\nexport const setIsAuthenticated = (value: boolean) => {\r\n    _isAuthenticated = value;\r\n}\r\n\r\nexport const getToken = () => {\r\n    return localStorage.getItem(tokenKey) || '';\r\n}\r\n\r\nexport class UnauthorizedError extends Error {\r\n    constructor(message: string) {\r\n        super(message);\r\n        Object.setPrototypeOf(this, new.target.prototype);\r\n        this.name = UnauthorizedError.name;\r\n    }\r\n}\r\n\r\nexport async function callMsGraph(accessToken: any): Promise<any> {\r\n    const headers = new Headers();\r\n    const bearer = `Bearer ${accessToken}`;\r\n\r\n    headers.append(\"Authorization\", bearer);\r\n\r\n    const options = {\r\n        method: \"GET\",\r\n        headers: headers\r\n    };\r\n\r\n    return await fetch(graphConfig.graphMeEndpoint, options)\r\n        .then(response => response.json())\r\n        .catch(error => console.log(error));\r\n}","import { User } from '../dataAccess/models';\r\nimport { AppState } from \"./@types\";\r\n\r\nenum actions {\r\n    LOG_IN,\r\n    LOG_OUT,\r\n    SET_AUTHENTICATION_ERROR,\r\n}\r\n\r\nexport type AppAction =\r\n    | { type: typeof actions.LOG_IN, user: User }\r\n    | { type: typeof actions.LOG_OUT }\r\n    | { type: typeof actions.SET_AUTHENTICATION_ERROR, error: string }\r\n    ;\r\n\r\nexport const appActions = {\r\n    login: (user: User) => ({ type: actions.LOG_IN, user }),\r\n    logout: () => ({ type: actions.LOG_OUT }),\r\n    setAuthenticationError: (error: string) => ({ type: actions.SET_AUTHENTICATION_ERROR, error }),\r\n}\r\n\r\nconst initialState: AppState = {\r\n    isAuthenticated: null,\r\n    user: {\r\n        id: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\"\r\n    }\r\n}\r\n\r\nexport function reducer(state: AppState = initialState, action: AppAction): AppState {\r\n    switch (action.type) {\r\n        case actions.SET_AUTHENTICATION_ERROR: {\r\n            return {\r\n                ...state,\r\n                authenticationError: action.error\r\n            };\r\n        }\r\n\r\n        case actions.LOG_IN: {\r\n            return {\r\n                ...state,\r\n                authenticationError: null,\r\n                user: action.user,\r\n                isAuthenticated: true\r\n            };\r\n        }\r\n\r\n        case actions.LOG_OUT: {\r\n            return {\r\n                ...state,\r\n                user: initialState.user,\r\n                authenticationError: null,\r\n                isAuthenticated: false\r\n            };\r\n        }\r\n\r\n        // switch end\r\n    }\r\n\r\n    return state;\r\n}","import React, {useState} from 'react';\r\nimport { Button, Typography } from 'antd';\r\nimport {loginRequest } from '../dataAccess/authConfig';\r\nimport { useMsal } from '@azure/msal-react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {callMsGraph, setIsAuthenticated} from \"../infrastructure/auth/authService\";\r\n\r\nimport './login.css';\r\nimport {AuthenticationResult} from \"@azure/msal-common\";\r\nimport { User } from '../dataAccess/models';\r\nimport {appActions} from \"../state/appState\";\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst Login = (props: RouteComponentProps) => {\r\n    const { instance, accounts } = useMsal();\r\n    const [error, setError] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { history, location } = props;\r\n\r\n    const handleLogin = async () => {\r\n        let isError = false;\r\n\r\n       await instance.loginPopup(loginRequest)\r\n           .catch(e => {\r\n            isError = true;\r\n        });\r\n\r\n        if (isError) {\r\n            setError(true);\r\n            dispatch(appActions.setAuthenticationError('error'));\r\n            return;\r\n        }\r\n\r\n        // @ts-ignore\r\n        const response: AuthenticationResult = await instance.acquireTokenSilent({...loginRequest, account: accounts[0]})\r\n            .then((response) => {\r\n               localStorage.setItem('accessToken', response.accessToken);\r\n            })\r\n            .catch(e => isError = true);\r\n\r\n\r\n        const userData = await callMsGraph(localStorage.getItem('accessToken'));\r\n\r\n        if (!userData) {\r\n            dispatch(appActions.setAuthenticationError('error'));\r\n            setError(true);\r\n            return;\r\n        }\r\n\r\n        const user: User = {\r\n            id: userData.id,\r\n            firstName: userData.givenName,\r\n            lastName: userData.surname,\r\n            email: userData.mail\r\n        }\r\n\r\n        dispatch(appActions.login(user))\r\n        setIsAuthenticated(true);\r\n\r\n        const locationState: any = location.state;\r\n        const { from } = (locationState && locationState.from ? locationState : { from: { pathname: \"/\" } });\r\n        const fromState = locationState?.from.state;\r\n        history.replace(from, fromState);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={'login-page'}>\r\n            <div className={'login'}>\r\n                <div className={'loginbox'}>\r\n                <div className={'title'}>\r\n                    <Text type=\"secondary\">Welcome back!</Text>\r\n                    <Title style={{ marginTop: '10px', color: '#001529' }}>\r\n                        Login your account\r\n                    </Title>\r\n                </div>\r\n\r\n                        <Button\r\n                            style={{ width: '100%' }}\r\n                            onClick={handleLogin}\r\n                            type=\"primary\"\r\n                            htmlType=\"submit\"\r\n                            className=\"login-form-button\">\r\n                            Log in with Azure AD\r\n                        </Button>\r\n                </div>\r\n            </div>\r\n            <div className={'login-info'}>\r\nd\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\n\r\n","import { AppState } from \"./@types\";\r\n\r\nexport const getAuthenticated = (state: AppState) => state.isAuthenticated;\r\nexport const getAuthenticationError = (state: AppState) => state.authenticationError;\r\n\r\nexport const getUser = (state: AppState) => state.user;","import React, {useCallback} from 'react';\r\nimport { useHistory } from \"react-router\";\r\nimport { Layout, Menu } from 'antd';\r\nimport {Link} from \"react-router-dom\";\r\nimport { Pages } from '../@types';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getUser} from \"../state/selectors\";\r\n\r\nimport './Page.css';\r\nimport {appActions} from \"../state/appState\";\r\nimport {setIsAuthenticated} from \"../infrastructure/auth/authService\";\r\n\r\nconst { Header, Content, Sider, Footer } = Layout;\r\n\r\nconst Page = (props: React.PropsWithChildren<any>) => {\r\n    const selectedKey = window.location.pathname === Pages.USERS_PATH ? ['1'] : ['2']\r\n\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(getUser);\r\n    const history = useHistory();\r\n\r\n    const onLogout = useCallback( () => {\r\n        dispatch(appActions.logout())\r\n        setIsAuthenticated(false);\r\n    }, [dispatch, history])\r\n\r\n    return (\r\n        <Layout style={{minHeight: '100vh'}}>\r\n            <Sider width={200}>\r\n                <div className=\"logo\">PLM</div>\r\n                <Menu selectedKeys={selectedKey} theme=\"dark\" mode=\"inline\">\r\n                    <Menu.Item key=\"1\">\r\n                        <Link to={Pages.USERS_PATH}>Пользователи</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"2\">\r\n                        <Link to={Pages.GROUPS_PATH}>Проекты</Link>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Sider>\r\n            <Layout>\r\n                <Header style={{padding: 0, background: '#fff'}}>\r\n                    <div style={{padding: '0 50px', display: 'flex', alignItems: 'center', justifyContent: 'flex-end'}}>\r\n                        <div style={{marginRight: '30px'}}>{user.firstName+ ' ' + user.lastName}</div>\r\n                        <Link to={Pages.LOGIN_PATH} onClick={onLogout}>Выйти</Link>\r\n                    </div>\r\n                </Header>\r\n                <Content style={{margin: '0 16px'}}>\r\n                    {props.children}\r\n                </Content>\r\n                <Footer style={{textAlign: 'center'}}>PLM System @ 2021 Created by Evgeniya Berdnikova</Footer>\r\n            </Layout>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Page;","import {GRAPH_PATH} from \"../@types\";\r\nimport {Group, Preview, TaskModel, UpdateTaskModel} from \"./models\";\r\n\r\n//USERS\r\n\r\nexport const getUsers = async (accessToken: string) => {\r\n    const response = await fetch(`${GRAPH_PATH}/v1.0/users`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            'Authorization': `Bearer ${accessToken}`,\r\n            \"Accept\": \"application/json\"\r\n        }\r\n    })\r\n\r\n   return response.json();\r\n}\r\n\r\nexport const getUserInfo = async (accessToken: string, userId: string) => {\r\n    const response = await fetch(`${GRAPH_PATH}/v1.0/users/${userId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            'Authorization': `Bearer ${accessToken}`,\r\n            \"Accept\": \"application/json\"\r\n        }\r\n    })\r\n\r\n    return response.json();\r\n}\r\n\r\n// GROUPS\r\n\r\nexport const getGroupLists = async (accessToken: string) => {\r\n    const response = await fetch(`${GRAPH_PATH}/v1.0/groups`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': `Bearer ${accessToken}`,\r\n            \"Accept\": \"application/json\"\r\n        }\r\n    })\r\n\r\n   return response.json();\r\n}\r\n\r\nexport const createGroup = async (accessToken: string, group: Group) => {\r\n    const response = await fetch(`${GRAPH_PATH}/v1.0/groups`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Authorization': `Bearer ${accessToken}`,\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(group)\r\n    })\r\n\r\n    return response.json();\r\n}\r\n\r\nexport const getGroupFiles = async (accessToken: string, groupId: string) => {\r\n    const response = await fetch(`${GRAPH_PATH}/v1.0/groups/${groupId}/drive/root/children`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': `Bearer ${accessToken}`,\r\n            \"Accept\": \"application/json\"\r\n        }\r\n    })\r\n\r\n    return response.json();\r\n}\r\n\r\nexport const getItemPreview = async (accessToken: string, groupId: string, itemId: string): Promise<Preview> => {\r\n    const response = await fetch(`${GRAPH_PATH}/beta/groups/${groupId}/drive/items/${itemId}/createLink`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': `Bearer ${accessToken}`,\r\n                \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n            },\r\n        }\r\n    )\r\n\r\n   return response.json();\r\n}\r\n\r\nexport const deleteGroupFile = async (accessToken: string, groupId: string, itemId: string) => {\r\n    const response = await fetch(`${GRAPH_PATH}/beta/groups/${groupId}/drive/items/${itemId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Authorization': `Bearer ${accessToken}`,\r\n        }\r\n    })\r\n\r\n    return response.json();\r\n}\r\n\r\nexport const uploadFile = async (accessToken: string, groupId: string, fileName: string, content: any) => {\r\n    const response = await fetch(`${GRAPH_PATH}/v1.0/groups/${groupId}/drive/root/${fileName}/${content}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Authorization': `Bearer ${accessToken}`,\r\n            \"Accept\": \"application/json\"\r\n        },\r\n    })\r\n\r\n    return response.json();\r\n}\r\n\r\n\r\n//AGILE\r\n\r\nexport const getGroupPlans = async (accessToken: string, groupId: string) => {\r\n    const response = await fetch(`${GRAPH_PATH}/v1.0/groups/${groupId}/planner/plans`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': `Bearer ${accessToken}`,\r\n        },\r\n    })\r\n\r\n    return response.json();\r\n}\r\n\r\nexport const getPlanTasks = async (accessToken: string, planId: string) => {\r\n    const response = await fetch (`${GRAPH_PATH}/v1.0/planner/plans/${planId}/tasks`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': `Bearer ${accessToken}`,\r\n        },\r\n    })\r\n\r\n    return response.json();\r\n}\r\n\r\nexport const getGroupMembers = async (accessToken: string, groupId: string) => {\r\n    const response = await fetch(`${GRAPH_PATH}/v1.0/groups/${groupId}/members`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': `Bearer ${accessToken}`,\r\n        },\r\n    })\r\n\r\n    return response.json();\r\n}\r\n\r\nexport const createTask = async (accessToken: string, task: TaskModel) => {\r\n    const response = await fetch (`${GRAPH_PATH}/beta/planner/tasks`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': `Bearer ${accessToken}`,\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(task),\r\n        }\r\n    )\r\n\r\n    return response.json();\r\n}\r\n\r\nexport const updateTask = async (accessToken: string, taskId: string, task: UpdateTaskModel, etag: string) => {\r\n    const response = await fetch (`${GRAPH_PATH}/beta/planner/tasks/${taskId}`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Authorization': `Bearer ${accessToken}`,\r\n                \"if-Match\": etag,\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(task),\r\n        }\r\n    )\r\n\r\n    return response.json();\r\n}","import React, {ChangeEvent, useState} from 'react';\r\nimport {Checkbox, Form, Input, Modal, Select} from 'antd';\r\nimport { Group, Member } from '../dataAccess/models';\r\nimport TextArea from \"antd/es/input/TextArea\";\r\nimport {useMsal} from \"@azure/msal-react\";\r\nimport {loginRequest} from \"../dataAccess/authConfig\";\r\nimport {AuthenticationResult} from \"@azure/msal-browser\";\r\nimport {getUsers} from \"../dataAccess/api\";\r\n\r\ninterface Props {\r\n    isVisible: boolean,\r\n    onClose: () => void,\r\n    onCreate: (group: Group) => void,\r\n    isLoading: boolean,\r\n}\r\n\r\nconst CreationPopup = ({isVisible, onClose, onCreate, isLoading}: Props) => {\r\n    const [group, setGroup] = useState<Group>({\r\n        id: '',\r\n        displayName: '',\r\n        description: null,\r\n        mailEnabled: false,\r\n        mailNickname: null,\r\n        securityEnabled: true,\r\n    });\r\n\r\n    const handleName = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setGroup({...group, displayName: e.target.value});\r\n    };\r\n\r\n    const handleDescription = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        if (!!e.target.value)\r\n            setGroup({...group, description: e.target.value})\r\n        else\r\n            setGroup({...group, description: null})\r\n    };\r\n\r\n    const handleNickName = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setGroup({...group, mailNickname: e.target.value});\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title={'Новая группа'}\r\n            visible={isVisible}\r\n            onCancel={onClose}\r\n            confirmLoading={isLoading}\r\n            onOk={() => onCreate(group)}\r\n            okText={'Создать'}\r\n            cancelText={'Отмена'}\r\n        >\r\n            <Form\r\n                layout=\"vertical\"\r\n            >\r\n                <Form.Item\r\n                    name={'nickname'}\r\n                    label={'Псевдоним группы'}\r\n                    rules={[{required: true, message: 'Введите псевдоним группы'}]}\r\n                >\r\n                    <Input\r\n                        value={group.mailNickname ?? ''}\r\n                        onChange={handleNickName}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name={'title'}\r\n                    label={'Отображаемое имя'}\r\n                    rules={[{required: true, message: 'Введите отображаемое имя'}]}\r\n                >\r\n                    <Input\r\n                        value={group.displayName}\r\n                        onChange={handleName}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name={'description'}\r\n                    label={'Описание'}\r\n                >\r\n                    <TextArea\r\n                        value={group.description ?? ''}\r\n                        onChange={handleDescription}\r\n                    />\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default CreationPopup;","import React, {useCallback, useEffect, useState} from 'react';\r\nimport {Breadcrumb, Button, Space, Table} from \"antd\";\r\nimport{ Link } from \"react-router-dom\";\r\nimport Page from './Page';\r\nimport { Pages } from '../@types';\r\nimport {loginRequest} from \"../dataAccess/authConfig\";\r\nimport {AuthenticationResult} from \"@azure/msal-common\";\r\nimport {createGroup, getGroupLists} from \"../dataAccess/api\";\r\nimport {useMsal} from \"@azure/msal-react\";\r\nimport {Group} from \"../dataAccess/models\";\r\nimport { FileOutlined, AppstoreOutlined, DeleteOutlined } from '@ant-design/icons';\r\n\r\nimport './Page.css';\r\nimport CreationPopup from \"../dialogs/CreationPopup\";\r\n\r\nconst Groups = () => {\r\n    const [groups, setGroups] = useState<Group[]>([]);\r\n    const [showCreationPopup, setShowCreationPopup] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const {instance, accounts} = useMsal();\r\n\r\n    useEffect(() => {\r\n        // @ts-ignore\r\n        instance.acquireTokenSilent({...loginRequest, account: accounts[0]})\r\n            .then((response: AuthenticationResult) => {\r\n                getGroupLists(response.accessToken).then((response: any) => {\r\n                    setGroups(response.value.map((it: any) => ({\r\n                        ...it as Group,\r\n                        key: it.id,\r\n                    })))\r\n                })\r\n            })\r\n            .catch((e: any) => console.log(e));\r\n    }, []);\r\n\r\n    const handleCreateGroup = async (group: Group) => {\r\n        setIsLoading(true);\r\n\r\n        // @ts-ignore\r\n        instance.acquireTokenSilent({...loginRequest, account: accounts[0]})\r\n            .then(async (response: AuthenticationResult) => {\r\n                await createGroup(response.accessToken, group);\r\n            })\r\n            .catch((e: any) => console.log(e));\r\n\r\n        setIsLoading(false);\r\n        setShowCreationPopup(false);\r\n    };\r\n\r\n    const closeCreationPopup = useCallback(() => {\r\n        setShowCreationPopup(false);\r\n    }, [setShowCreationPopup])\r\n\r\n    return (\r\n        <Page>\r\n            <CreationPopup isVisible={showCreationPopup} onClose={closeCreationPopup} onCreate={handleCreateGroup} isLoading={isLoading} />\r\n            <div className={'projects-wrapper'}>\r\n                <Table\r\n                    className={'table'}\r\n                    columns={[\r\n                        {\r\n                            title: 'Название',\r\n                            dataIndex: 'displayName',\r\n                            key: 'displayName',\r\n                            align: 'center',\r\n                        },\r\n                        {\r\n                            title: 'Дата создания',\r\n                            dataIndex: 'createdDateTime',\r\n                            key: 'createdDateTime',\r\n                            align: 'center',\r\n                            render: (text) => {\r\n                                const date = new Date(text);\r\n                                return (\r\n                                    <span>{date.toLocaleString()}</span>\r\n                                )\r\n                            }\r\n                        },\r\n                        {\r\n                            title: 'Agile доска',\r\n                            dataIndex: 'Agile',\r\n                            key: 'agile',\r\n                            align: 'center',\r\n                            render: (text, record) => (\r\n                                <Space key={text} size=\"middle\">\r\n                                    <Link to={Pages.GROUPS_BOARD_PATH + '/' + record.id}>\r\n                                        <AppstoreOutlined/>\r\n                                    </Link>\r\n                                </Space>\r\n                            )\r\n                        },\r\n                        {\r\n                            title: 'Документы',\r\n                            dataIndex: 'docs',\r\n                            key: 'docs',\r\n                            align: 'center',\r\n                            render: (text, render) => (\r\n                                <Link to={Pages.GROUPS_PATH + '/' + render.id}>\r\n                                    <FileOutlined/>\r\n                                </Link>\r\n                            )\r\n                        }\r\n                    ]}\r\n                    dataSource={groups}\r\n                    footer={() => (\r\n                        <Button onClick={() => setShowCreationPopup(true)}>Создать группу</Button>\r\n                    )}\r\n                />\r\n            </div>\r\n        </Page>\r\n    );\r\n}\r\n\r\nexport default Groups;","import React from \"react\";\r\n\r\nimport \"./styles/Drawer.css\";\r\n\r\ninterface Props {\r\n    title: string,\r\n    content: string\r\n}\r\n\r\nconst DescriptionItem = ({ title, content }: Props) => (\r\n    <div className=\"site-description-item-profile-wrapper\">\r\n        <p className=\"site-description-item-profile-p-label\">{title}:</p>\r\n        {content}\r\n    </div>\r\n);\r\n\r\nexport default DescriptionItem;","import {Col, Divider, Drawer, Row} from 'antd';\r\nimport React, {useEffect, useState} from 'react';\r\nimport {loginRequest} from \"../dataAccess/authConfig\";\r\nimport {AuthenticationResult} from \"@azure/msal-common\";\r\nimport {getUserInfo} from \"../dataAccess/api\";\r\nimport {useMsal} from \"@azure/msal-react\";\r\nimport DescriptionItem from \"./DescriptionItem\";\r\nimport {User} from \"../dataAccess/models\";\r\n\r\nimport \"./styles/Drawer.css\";\r\n\r\ninterface Props {\r\n    userId: string,\r\n    isVisible: boolean,\r\n    onClose: () => void,\r\n}\r\n\r\nconst UserInfoDrawer = ({userId, isVisible, onClose}: Props) => {\r\n    const [user, setUser] = useState<User | null>(null);\r\n\r\n    const {instance, accounts} = useMsal();\r\n\r\n    useEffect(() => {\r\n        // @ts-ignore\r\n        instance.acquireTokenSilent({...loginRequest, account: accounts[0]})\r\n            .then(async (response: AuthenticationResult) => {\r\n                const user = await getUserInfo(response.accessToken, userId);\r\n                console.log(user)\r\n                setUser({\r\n                    id: user.id,\r\n                    firstName: user.givenName,\r\n                    lastName: user.surname,\r\n                    email: user.mail,\r\n                    businessPhone: user.businessPhones ? user.businessPhones[0] : null,\r\n                    jobTitle: user.jobTitle,\r\n                    officeLocation: user.officeLocation,\r\n                })\r\n            })\r\n            .catch(e => console.log(e));\r\n    }, []);\r\n\r\n    return (\r\n        <Drawer\r\n            width={640}\r\n            placement=\"right\"\r\n            closable={true}\r\n            onClose={onClose}\r\n            visible={isVisible}\r\n        >\r\n            {user && <>\r\n                <p className=\"site-description-item-profile-p\" style={{marginBottom: 24}}>\r\n                    Информация о пользователе\r\n                </p>\r\n                <p className=\"site-description-item-profile-p\">Персональные данные</p>\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <DescriptionItem title=\"Имя\" content={user.firstName}/>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <DescriptionItem title=\"Фамилия\" content={user.lastName}/>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <DescriptionItem title=\"Должность\" content={user.jobTitle ?? \"-\"}/>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <DescriptionItem title=\"Офис\" content={user.officeLocation ?? \"-\"}/>\r\n                    </Col>\r\n                </Row>\r\n                <Divider/>\r\n                <p className=\"site-description-item-profile-p\">Контакты</p>\r\n                <Row>\r\n                    <DescriptionItem title=\"Email\" content={user.email}/>\r\n                </Row>\r\n                <Row>\r\n                    <DescriptionItem title=\"Телефон\" content={user.businessPhone ?? \"-\"}/>\r\n                </Row>\r\n            </>\r\n            }\r\n        </Drawer>\r\n    );\r\n}\r\n\r\nexport default UserInfoDrawer;","import React, {useEffect, useState} from 'react';\r\nimport { Table } from 'antd';\r\nimport Page from './Page';\r\nimport {getUserInfo, getUsers} from '../dataAccess/api';\r\nimport {AuthenticationResult} from \"@azure/msal-common\";\r\nimport {loginRequest} from \"../dataAccess/authConfig\";\r\nimport {useMsal} from \"@azure/msal-react\";\r\nimport {User} from \"../dataAccess/models\";\r\nimport {UserOutlined} from '@ant-design/icons';\r\n\r\nimport './Page.css';\r\nimport UserInfoDrawer from '../components/UserInfoDrawer';\r\n\r\nconst Users = () => {\r\n    const [users, setUsers] = useState<User[]>([]);\r\n    const [selectedUser, setSelectedUser] = useState('');\r\n    const [showUserInfo, setShowUserInfo] = useState(false);\r\n\r\n    const { instance, accounts } = useMsal();\r\n\r\n    useEffect(() => {\r\n        // @ts-ignore\r\n        instance.acquireTokenSilent({...loginRequest, account: accounts[0]})\r\n            .then((response:AuthenticationResult) => {\r\n                getUsers(response.accessToken).then((response: any) => {\r\n                    setUsers(response.value.map((it: any) => {\r\n                        return {\r\n                            id: it.id,\r\n                            firstName: it.givenName,\r\n                            lastName: it.surname,\r\n                            email: it.userPrincipalName\r\n                        } as User\r\n                    }))\r\n                })\r\n            })\r\n            .catch(e => console.log(e));\r\n    }, []);\r\n\r\n    const getUser = (userId: string) => {\r\n        setSelectedUser(userId);\r\n        setShowUserInfo(true);\r\n    }\r\n\r\n    const handleUserInfoDrawer = () => {\r\n        setShowUserInfo(false);\r\n        setSelectedUser('');\r\n    }\r\n\r\n    return (\r\n        <Page>\r\n            {selectedUser &&\r\n            <UserInfoDrawer\r\n                userId={selectedUser}\r\n                isVisible={showUserInfo}\r\n                onClose={handleUserInfoDrawer}\r\n            />\r\n            }\r\n            <Table\r\n                className={'table'}\r\n                columns={[\r\n                    {\r\n                        title: 'Имя пользователя',\r\n                        dataIndex: 'name',\r\n                        key: 'name'\r\n                    },\r\n                    {\r\n                        title: 'Email',\r\n                        dataIndex: 'email',\r\n                        key: 'email'\r\n                    },\r\n                    {\r\n                        title: 'Подробно',\r\n                        dataIndex: 'info',\r\n                        key: 'info',\r\n                        align: 'center',\r\n                        render: (text, record) => (\r\n                            <UserOutlined style={{ color: '#1890ff' }} onClick={() => getUser(record.id)} />\r\n                        )\r\n                    }\r\n                ]}\r\n                dataSource={users ? users.map(user => {\r\n                        return {\r\n                            key: user.id,\r\n                            id: user.id,\r\n                            name: `${user.firstName} ${user.lastName}`,\r\n                            email: user.email,\r\n                        }\r\n                    }\r\n                    ) : []}\r\n            />\r\n        </Page>\r\n    );\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport { Card, Typography } from 'antd';\r\nimport {Task} from '../dataAccess/models';\r\nimport styled from 'styled-components';\r\n\r\nconst {Text} = Typography;\r\n\r\ninterface Props {\r\n    task: Task,\r\n    index: number\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin-bottom: 8px;\r\n  `\r\n\r\nconst TaskCard = ({task ,index}: Props) => {\r\n    return (\r\n        <Draggable\r\n            draggableId={task.id}\r\n            index={index}\r\n        >\r\n            {(provided) => {\r\n            return (\r\n                <Container\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                >\r\n                    <Card\r\n                        style={{ minWidth: 200, textAlign: 'left'  }}\r\n                        size={'small'}\r\n                    >\r\n                        <p><Text strong>#{task.id}: </Text><Text>{task.title}</Text></p>\r\n                        <p><Text type={'secondary'}>Тип: </Text><Text>{task.percentComplete}</Text></p>\r\n                    </Card>\r\n                </Container>\r\n            )}\r\n            }\r\n        </Draggable>\r\n    );\r\n}\r\n\r\nexport default TaskCard;","import React from 'react';\r\nimport {Droppable} from \"react-beautiful-dnd\";\r\nimport { Task } from '../dataAccess/models';\r\nimport TaskCard from './TaskCard';\r\nimport styled from 'styled-components';\r\nimport {Typography} from \"antd\";\r\n\r\n\r\ninterface Props {\r\n    id: string,\r\n    tasks: Task[],\r\n    title: string\r\n}\r\n\r\nconst TaskList = styled.div`\r\n  padding: 8px;\r\n  transition: background-color 0.2s ease;\r\n  background-color: ${(props: any )=>\r\n    props.isDraggingOver ? 'skyblue' : 'white'}\r\n  flex-grow: 1;\r\n  min-height: 60vh;\r\n`\r\n\r\nconst Column = ({id, tasks, title}: Props) => {\r\n\r\n    const Container = styled.div`\r\n  border: 1px solid lightgrey;\r\n  border-radius: 2px;\r\n  flex-grow: 1;\r\n  text-align: center;\r\n  margin-right: ${id !== 'column-3' ? '8px' : '0'};\r\n  width: 100px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n    return (\r\n        <Container>\r\n            <div style={{\r\n                borderBottom: '1px solid lightgrey',\r\n                backgroundColor: '#fff',\r\n                height: '30px',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center'\r\n            }}>\r\n                <Typography.Text>\r\n                    {title}\r\n                </Typography.Text>\r\n            </div>\r\n            <Droppable\r\n                droppableId={id}\r\n            >\r\n                {(provided) => (\r\n                    <TaskList\r\n                        ref={provided.innerRef}\r\n                        className={'column'}\r\n                        {...provided.droppableProps}\r\n                    >\r\n                        {tasks && tasks.map((task, index) => <TaskCard key={task.id} task={task} index={index}/>)}\r\n                        {provided.placeholder}\r\n                    </TaskList>\r\n                )}\r\n\r\n            </Droppable>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Column;","import React, {ChangeEvent, useState} from 'react';\r\nimport {DatePicker, Form, Input, Modal, Select} from \"antd\";\r\nimport {Task, ProcessType, TaskModel, UpdateTaskModel} from '../dataAccess/models';\r\nimport TextArea from \"antd/es/input/TextArea\";\r\nimport {createTask, getGroupMembers, getGroupPlans, getPlanTasks, updateTask} from '../dataAccess/api';\r\nimport {useMsal} from \"@azure/msal-react\";\r\nimport {loginRequest} from \"../dataAccess/authConfig\";\r\nimport {AuthenticationResult} from \"@azure/msal-browser\";\r\nimport moment, { Moment } from 'moment';\r\n\r\ninterface Props {\r\n    visible: boolean,\r\n    setVisible: (visible: boolean) => void,\r\n    planId: string,\r\n    groupId: string\r\n}\r\n\r\nconst CreateTaskDialog = ({visible, setVisible, planId, groupId}: Props) => {\r\n    const [confirmLoading, setConfirmLoading] = useState(false);\r\n    const [task, setTask] = useState<Task>({\r\n        id: '',\r\n        planId: '',\r\n        percentComplete: 0,\r\n        assigmentBy: '',\r\n        dueDateTime: '',\r\n        title: '',\r\n        description: ''\r\n    })\r\n\r\n    const [options, setOptions] = useState<{label: string, value: string}[]>([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const {instance, accounts} = useMsal();\r\n\r\n    const handleCancel = () => {\r\n        setVisible(false)\r\n    }\r\n\r\n    const handleTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTask({...task, title: e.target.value})\r\n    }\r\n\r\n    const handleDescription = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        setTask({...task, description: e.target.value})\r\n    }\r\n\r\n    const handleAssign = async (open: boolean) => {\r\n        if (open) {\r\n            setIsLoading(true)\r\n\r\n            // @ts-ignore\r\n            instance.acquireTokenSilent({...loginRequest, account: accounts[0]})\r\n                .then(async (response: AuthenticationResult) => {\r\n                    const data = await getGroupMembers(response.accessToken, groupId);\r\n                    setOptions(data.value.map((it: any) => ({\r\n                        label: it.displayName,\r\n                        value: it.id,\r\n                    })))\r\n                })\r\n                .catch((e: any) => console.log(e));\r\n\r\n        }\r\n        setIsLoading(false)\r\n    }\r\n\r\n    const handleChangeAssign = (value: string) => {\r\n        setTask({...task, assigmentBy: value})\r\n    }\r\n\r\n    const handleDeadline = (value: Moment | null) => {\r\n        setTask({...task, dueDateTime: moment(value).toISOString()})\r\n    }\r\n\r\n    const handleCreateTask = () => {\r\n        setConfirmLoading(true)\r\n        // @ts-ignore\r\n        instance.acquireTokenSilent({...loginRequest, account: accounts[0]})\r\n            .then(async (response: AuthenticationResult) => {\r\n                const taskModel: TaskModel = {\r\n                    planId: planId,\r\n                    title: task.title,\r\n                }\r\n                const res = await createTask(response.accessToken, taskModel);\r\n                const updateTaskModel: UpdateTaskModel = {\r\n                    planId: planId,\r\n                    assignments: {\r\n                        [task.assigmentBy]: {\r\n                            \"@odata.type\": \"#microsoft.graph.plannerAssignment\",\r\n                            \"orderHint\":` !`,\r\n                        }\r\n                    }\r\n                }\r\n                await updateTask(response.accessToken, res.id, updateTaskModel, res['@odata.etag']);\r\n            })\r\n            .catch((e: any) => console.log(e));\r\n\r\n        setConfirmLoading(false)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title={'Добавить новую задачу'}\r\n            visible={visible}\r\n            confirmLoading={confirmLoading}\r\n            cancelText={'Отмена'}\r\n            okText={'Добавить'}\r\n            onCancel={handleCancel}\r\n            onOk={handleCreateTask}\r\n        >\r\n            <Form\r\n                layout=\"vertical\"\r\n            >\r\n                <Form.Item\r\n                    name={'title'}\r\n                    label={'Задача'}\r\n                    rules={[{ required: true, message: 'Введите название задачи' }]}\r\n                >\r\n                    <Input\r\n                        value={task.title}\r\n                        onChange={handleTitle}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name={'description'}\r\n                    label={'Описание'}\r\n                >\r\n                    <TextArea\r\n                        value={task.description}\r\n                        onChange={handleDescription}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label={'Назначить'}\r\n                >\r\n                    <Select\r\n                        placeholder={'Назначить'}\r\n                        value={task.assigmentBy}\r\n                        onDropdownVisibleChange={handleAssign}\r\n                        onChange={handleChangeAssign}\r\n                        options={options}\r\n                        loading={isLoading}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label={'Срок выполнения'}\r\n                >\r\n                    <DatePicker\r\n                        placeholder={'Срок'}\r\n                        value={!!task.dueDateTime ? moment(task.dueDateTime) : null}\r\n                        format={'DD.MM.YYYY'}\r\n                        onChange={handleDeadline}\r\n                    />\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default CreateTaskDialog;","import React, {useState} from 'react';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport Column from './Column';\r\nimport { Button } from 'antd';\r\nimport {PlusOutlined} from '@ant-design/icons';\r\n\r\nimport './styles/Board.css';\r\nimport CreateTaskDialog from \"../dialogs/CreateTaskDialog\";\r\n\r\ninterface Props {\r\n    data: any,\r\n    planId: string,\r\n    groupId: string,\r\n}\r\n\r\nconst Board = ({data, planId, groupId}: Props) => {\r\n    const [state, setState] = useState(data)\r\n    const [visibleNewTask, setVisibleNewTask] = useState(false)\r\n\r\n    const handleVisibleNewTask = (visible: boolean) => {\r\n        setVisibleNewTask(visible)\r\n    }\r\n\r\n    const onDragEnd = (result: any) => {\r\n        const {destination, source, draggableId} = result;\r\n\r\n        if (!destination) {\r\n            return;\r\n        }\r\n\r\n        if (\r\n            destination.droppableId === source.droppableId &&\r\n            destination.index === source.index\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        // @ts-ignore\r\n        const start = state.columns[source.droppableId]\r\n        // @ts-ignore\r\n        const finish = state.columns[destination.droppableId]\r\n\r\n        if (start === finish) {\r\n            const newTaskIds = Array.from(start.taskIds)\r\n            newTaskIds.splice(source.index, 1)\r\n            // @ts-ignore\r\n            newTaskIds.splice(destination.index, 0, draggableId)\r\n\r\n            const newColumn = {\r\n                ...start,\r\n                taskIds: newTaskIds\r\n            }\r\n\r\n            const newState = {\r\n                ...state,\r\n                columns: {\r\n                    ...state.columns,\r\n                    [newColumn.id]: newColumn\r\n                }\r\n            }\r\n\r\n            setState(newState)\r\n            return\r\n        }\r\n\r\n        // Moving from one list to another\r\n        const startTaskIds = Array.from(start.taskIds)\r\n        startTaskIds.splice(source.index, 1)\r\n        const newStart = {\r\n            ...start,\r\n            taskIds: startTaskIds\r\n        }\r\n\r\n        const finishTaskIds = Array.from(finish.taskIds)\r\n        finishTaskIds.splice(destination.index, 0, draggableId)\r\n        const newFinish = {\r\n            ...finish,\r\n            taskIds: finishTaskIds\r\n        }\r\n\r\n        const newState = {\r\n            ...state,\r\n            columns: {\r\n                ...state.columns,\r\n                [newStart.id]: newStart,\r\n                [newFinish.id]: newFinish\r\n            }\r\n        }\r\n        setState(newState)\r\n    }\r\n\r\n    const handleAddTask = () => {\r\n        setVisibleNewTask(true);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={'toolbar'}>\r\n                <Button\r\n                    size={'large'}\r\n                    type={'text'}\r\n                    onClick={handleAddTask}\r\n                    icon={<PlusOutlined />}\r\n                >\r\n                    Добавить задачу\r\n                </Button>\r\n            </div>\r\n            <DragDropContext\r\n                onDragEnd={onDragEnd}\r\n            >\r\n                <div style={{display: 'flex'}}>\r\n                    {state.columnOrder.map((columnId: string ) => {\r\n                        // @ts-ignore\r\n                        const column = state.columns[columnId]\r\n                        // @ts-ignore\r\n                        const tasks = column.taskIds.map((taskId: string) => state.tasks[taskId])\r\n                        return (\r\n                            <Column key={column.id} id={column.id} tasks={tasks} title={column.title}/>\r\n                        )\r\n                    })}\r\n\r\n                </div>\r\n            </DragDropContext>\r\n\r\n            {visibleNewTask &&\r\n            <CreateTaskDialog\r\n                visible={visibleNewTask}\r\n                setVisible={handleVisibleNewTask}\r\n                planId={planId}\r\n                groupId={groupId}\r\n            />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Board;","const initialData = {\r\n    tasks: {},\r\n    columns: {\r\n        'column-1': {\r\n            id: 'column-1',\r\n            title: 'Новые',\r\n            taskIds: []\r\n        },\r\n        'column-2': {\r\n            id: 'column-2',\r\n            title: 'Активные',\r\n            taskIds: []\r\n        },\r\n        'column-3': {\r\n            id: 'column-3',\r\n            title: 'Выполненные',\r\n            taskIds: []\r\n        }\r\n    },\r\n    // Facilitate reordering of the columns\r\n    columnOrder: ['column-1', 'column-2', 'column-3']\r\n}\r\n\r\nexport default initialData","import React, {useEffect, useState} from 'react';\r\nimport Board from '../components/Board';\r\nimport Page from \"./Page\";\r\nimport {useMsal} from \"@azure/msal-react\";\r\nimport { AuthenticationResult } from '@azure/msal-browser';\r\nimport {loginRequest} from \"../dataAccess/authConfig\";\r\nimport {getGroupPlans, getPlanTasks} from \"../dataAccess/api\";\r\nimport {useParams} from \"react-router\";\r\n\r\nimport initialData from '../dataAccess/initData';\r\nimport { Task } from '../dataAccess/models';\r\n\r\nconst Agile = () => {\r\n    const [tasks, setTasks] = useState<Task[]>([]);\r\n    const [data, setData] = useState(initialData);\r\n    const [planId, setPlanId] = useState('');\r\n\r\n    const {groupId} = useParams<{ groupId: string }>();\r\n\r\n    const {instance, accounts} = useMsal();\r\n\r\n    useEffect(() => {\r\n        // @ts-ignore\r\n        instance.acquireTokenSilent({...loginRequest, account: accounts[0]})\r\n            .then(async (response: AuthenticationResult) => {\r\n                const data = await getGroupPlans(response.accessToken, groupId);\r\n                const tasks = await getPlanTasks(response.accessToken, data.value[0].id)\r\n                setPlanId(data.value[0].id);\r\n                setTasks(tasks.value.map((it: any) => ({\r\n                        id: it.id,\r\n                        planId: it.planId,\r\n                        percentComplete: it.percentComplete,\r\n                        assigmentBy: Object.keys(it.assignments) ? Object.keys(it.assignments) : '',\r\n                        dueDateTime: it.dueDateTime,\r\n                        title: it.title,\r\n                        description: it.description ? it.description : ''\r\n                    })));\r\n            })\r\n            .catch((e: any) => console.log(e));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!!tasks) {\r\n            const tasksData = {\r\n                ...initialData\r\n            };\r\n\r\n            for (let task of tasks) {\r\n                // @ts-ignore\r\n                tasksData.tasks[task.id] = task;\r\n                if (task.percentComplete === 0) {\r\n                    // @ts-ignore\r\n                    tasksData.columns['column-1'].taskIds.push(task.id)\r\n                } else if (task.percentComplete === 50) {\r\n                    // @ts-ignore\r\n                    tasksData.columns['column-2'].taskIds.push(task.id)\r\n                } else {\r\n                    // @ts-ignore\r\n                    tasksData.columns['column-3'].taskIds.push(task.id)\r\n                }\r\n\r\n            }\r\n\r\n            setData(tasksData);\r\n        }\r\n    }, [tasks])\r\n\r\n    return (\r\n        <Page>\r\n            {planId &&\r\n                <Board\r\n                    data={data}\r\n                    planId={planId}\r\n                    groupId={groupId}\r\n                />\r\n            }\r\n        </Page>\r\n    );\r\n}\r\n\r\nexport default Agile;","import React, {useEffect, useState} from 'react';\r\nimport {Modal, Upload} from \"antd\";\r\nimport { InboxOutlined } from '@ant-design/icons';\r\n\r\ninterface Props {\r\n    isVisible: boolean,\r\n    onClose: () => void,\r\n    onUpload: (fileName: string, file: any) => void,\r\n    isLoading: boolean,\r\n}\r\n\r\nfunction UploadDialog({isVisible, onClose, onUpload, isLoading}: Props) {\r\n    const [file, setFile] = useState<any | null>(null);\r\n    const [fileName, setFileName] = useState('file');\r\n\r\n    useEffect(() => {\r\n        if (!isVisible)\r\n            setFile(null);\r\n\r\n    }, [isVisible])\r\n\r\n    return (\r\n        <Modal\r\n            title={\"Загрузить файл\"}\r\n            visible={isVisible}\r\n            onCancel={onClose}\r\n            onOk={() => onUpload(fileName, file)}\r\n            confirmLoading={isLoading}\r\n        >\r\n            <Upload.Dragger\r\n                disabled={isLoading}\r\n                beforeUpload={(file) => {\r\n                    setFileName(file.name);\r\n                    const reader = new FileReader();\r\n                    reader.readAsArrayBuffer(file);\r\n                   reader.onload = function() {\r\n                       setFile(reader.result);\r\n                   }\r\n                return false;\r\n            }}\r\n            >\r\n                <p className=\"ant-upload-drag-icon\">\r\n                    <InboxOutlined />\r\n                </p>\r\n                <p className=\"ant-upload-text\">Нажмите или перетащите файлы в эту зону</p>\r\n                <p className=\"ant-upload-hint\">\r\n                    Можно добавить несколько файлов\r\n                </p>\r\n\r\n            </Upload.Dragger>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default UploadDialog;","import React, {useCallback, useEffect} from 'react';\r\nimport{ Link } from \"react-router-dom\";\r\nimport { Pages } from '../@types';\r\nimport {Button, Space, Table} from \"antd\";\r\nimport { useState } from 'react';\r\nimport {loginRequest} from \"../dataAccess/authConfig\";\r\nimport {AuthenticationResult} from \"@azure/msal-common\";\r\nimport {deleteGroupFile, getGroupFiles, getItemPreview, uploadFile} from \"../dataAccess/api\";\r\nimport {useMsal} from \"@azure/msal-react\";\r\nimport {DeleteOutlined, EyeOutlined} from '@ant-design/icons';\r\nimport {GroupFile, Preview} from \"../dataAccess/models\";\r\nimport {useParams} from \"react-router\";\r\nimport Page from \"./Page\";\r\nimport UploadDialog from \"../dialogs/UploadDialog\";\r\n\r\nimport './Page.css';\r\n\r\nconst Files = () => {\r\n    const [files, setFiles] = useState<GroupFile[]>([]);\r\n    const [showUploader, setShowUploader] = useState<boolean>(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const {groupId} = useParams<{ groupId: string }>();\r\n\r\n    const {instance, accounts} = useMsal();\r\n\r\n    const getFiles = async () => {\r\n        // @ts-ignore\r\n        instance.acquireTokenSilent({...loginRequest, account: accounts[0]})\r\n            .then( async (response: AuthenticationResult) => {\r\n                await getGroupFiles(response.accessToken, groupId).then((response: any) => {\r\n                    setFiles(response.value.map((it: any) => ({\r\n                        id: it.id,\r\n                        key: it.id,\r\n                        name: it.name,\r\n                        createdDate: it.fileSystemInfo.createdDateTime,\r\n                        createdBy: it.createdBy.user ? it.createdBy.user.displayName : it.createdBy.application.displayName,\r\n                        lastModifiedDate: it.fileSystemInfo.lastModifiedDateTime,\r\n                        lastModifiedBy: it.lastModifiedBy.user ? it.lastModifiedBy.user.displayName : it.createdBy.application.displayName,\r\n                        file: it.file,\r\n                        webUrl: it.webUrl,\r\n                    })))\r\n                })\r\n            })\r\n            .catch((e: any) => console.log(e));\r\n    }\r\n\r\n    useEffect(() => {\r\n        getFiles();\r\n    }, []);\r\n\r\n    const onPreview = async (url: string) => {\r\n        let data: Preview | null = null;\r\n        // @ts-ignore\r\n        await instance.acquireTokenSilent({...loginRequest, account: accounts[0]})\r\n            .then(async (response: AuthenticationResult) => {\r\n                data = await getItemPreview(response.accessToken, groupId, url)\r\n            })\r\n            .catch((e: any) => console.log(e));\r\n\r\n        if (data !== null) {\r\n            const link = document.createElement('a');\r\n            // @ts-ignore\r\n            link.href = data.link.webUrl;\r\n            link.setAttribute('target', '_blank');\r\n            document.body.appendChild(link);\r\n            link.click()\r\n            link.remove();\r\n        }\r\n    };\r\n\r\n    const onDelete = useCallback(async (item: GroupFile) => {\r\n        // @ts-ignore\r\n        await instance.acquireTokenSilent({...loginRequest, account: accounts[0]})\r\n            .then(async (response: AuthenticationResult) => {\r\n                await deleteGroupFile(response.accessToken, groupId, item.id);\r\n            })\r\n            .catch((e: any) => console.log(e));\r\n\r\n        await getFiles();\r\n    }, []);\r\n\r\n    const onUpload = async (fileName: string, file: any) => {\r\n        setIsLoading(true);\r\n\r\n        //@ts-ignore\r\n        await instance.acquireTokenSilent({...loginRequest, account: accounts[0]})\r\n            .then(async (response: AuthenticationResult) => {\r\n                const data = await uploadFile(response.accessToken, groupId, fileName, file);\r\n                console.log(data)\r\n            })\r\n            .catch((e: any) => console.log(e));\r\n\r\n        await getFiles();\r\n\r\n        setIsLoading(false);\r\n    };\r\n\r\n    const handleUploaderClose = () => {\r\n        setShowUploader(false)\r\n    }\r\n\r\n    return (\r\n        <Page>\r\n            <UploadDialog\r\n                isVisible={showUploader}\r\n                onClose={handleUploaderClose}\r\n                onUpload={onUpload}\r\n                isLoading={isLoading}\r\n            />\r\n\r\n            <Space className={'space-link'}>\r\n                <Link className={'link'} to={Pages.GROUPS_PATH}>Вернуться к группам</Link>\r\n            </Space>\r\n            <Table\r\n                className={'table'}\r\n                columns={[\r\n                    {\r\n                        title: 'Название',\r\n                        dataIndex: 'name',\r\n                        key: 'name',\r\n                        align: 'center',\r\n\r\n                    },\r\n                    {\r\n                        title: 'Создан',\r\n                        dataIndex: 'createdBy',\r\n                        key: 'createdBy',\r\n                        align: 'center',\r\n\r\n                    },\r\n                    {\r\n                        title: 'Дата создания',\r\n                        dataIndex: 'createdDate',\r\n                        key: 'createdDate',\r\n                        align: 'center',\r\n                        render: (text) => {\r\n                            const date = new Date(text);\r\n                            return (\r\n                                <span>{date.toLocaleString()}</span>\r\n                            )\r\n                        }\r\n\r\n                    },\r\n                    {\r\n                        title: 'Изменен',\r\n                        dataIndex: 'lastModifiedBy',\r\n                        key: 'lastModifiedBy',\r\n                        align: 'center',\r\n\r\n                    },\r\n                    {\r\n                        title: 'Дата изменения',\r\n                        dataIndex: 'lastModifiedDate',\r\n                        key: 'lastModifiedDate',\r\n                        align: 'center',\r\n                        render: (text) => {\r\n                            const date = new Date(text);\r\n                            return (\r\n                                <span>{date.toLocaleString()}</span>\r\n                            )\r\n                        }\r\n                    },\r\n                    {\r\n                        title: 'Просмотр',\r\n                        dataIndex: 'webUrl',\r\n                        key: 'webUrl',\r\n                        align: 'center',\r\n                        render: (text, render) => {\r\n                            return (\r\n                                <EyeOutlined style={{ color: '#1890ff' }} onClick={() => onPreview(render.id)} />\r\n                            )\r\n                        }\r\n                    },\r\n                    {\r\n                        title: 'Удалить',\r\n                        dataIndex: 'delete',\r\n                        key: 'delete',\r\n                        align: 'center',\r\n                        render: (text, render) => (\r\n                            <DeleteOutlined style={{ color: 'red' }} onClick={() => onDelete(render)} />\r\n                        )\r\n                    }\r\n                ]}\r\n                dataSource={files}\r\n                footer={() =>\r\n                    <Button onClick={() => setShowUploader(true)}>Загрузить файл</Button>\r\n                }\r\n            />\r\n        </Page>\r\n    );\r\n}\r\n\r\nexport default Files;","import React from \"react\";\r\nimport { Switch, Redirect, Route } from \"react-router-dom\";\r\nimport PrivateRoute from \"../infrastructure/routing/PrivateRoute\";\r\n\r\nimport {Pages} from \"../@types\";\r\nimport Login from \"./Login\";\r\nimport Groups from \"./Groups\";\r\nimport Users from \"./Users\";\r\nimport Agile from \"./Agile\";\r\nimport Files from \"./Files\";\r\n\r\nexport default function Index() {\r\n    return (\r\n        <Switch>\r\n            <Route exact path={Pages.LOGIN_PATH} component={Login}/>\r\n            <PrivateRoute exact path={Pages.GROUPS_PATH} component={Groups}/>\r\n            <PrivateRoute exact path={Pages.USERS_PATH} component={Users}/>\r\n            <PrivateRoute exact path={Pages.GROUPS_PATH + '/:groupId'} component={Files}/>\r\n            <PrivateRoute exact path={Pages.GROUPS_BOARD_PATH + '/:groupId'} component={Agile}/>\r\n            <Redirect to=\"/\" />\r\n        </Switch>\r\n    );\r\n};","import React, { useEffect } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nimport { appActions } from \"../state/appState\";\r\nimport { getAuthenticated, getAuthenticationError } from \"../state/selectors\";\r\nimport {AuthenticationResult} from \"@azure/msal-common\";\r\nimport {loginRequest} from \"../dataAccess/authConfig\";\r\nimport {useMsal} from \"@azure/msal-react\";\r\nimport {callMsGraph} from \"../infrastructure/auth/authService\";\r\nimport {User} from \"../dataAccess/models\";\r\nimport {IPublicClientApplication} from \"@azure/msal-browser\";\r\n\r\n\r\nconst authenticate = async (dispatch: Dispatch<any>, instance: IPublicClientApplication, accounts: any, isAuthenticated: any) => {\r\n\r\n    if (accounts && accounts[0] && !isAuthenticated) {\r\n        await instance.acquireTokenSilent({\r\n            ...loginRequest,\r\n            account: accounts[0]\r\n        }).then((response: AuthenticationResult) => {\r\n            callMsGraph(response.accessToken)\r\n                .then((response) => {\r\n                    const user: User = {\r\n                        id: response.id,\r\n                        firstName: response.givenName,\r\n                        lastName: response.surname,\r\n                        email: response.mail\r\n                    }\r\n                    dispatch(appActions.login(user));\r\n                })\r\n        }) .catch((e) => console.log(e))\r\n    }\r\n};\r\n\r\ninterface Props {\r\n    children: React.ReactNode;\r\n}\r\n\r\nconst Authentication = ({ children }: Props) => {\r\n    const isAuthenticated = useSelector(getAuthenticated);\r\n    const authenticationError = useSelector(getAuthenticationError);\r\n\r\n    const { instance, accounts } = useMsal();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        void authenticate(dispatch, instance, accounts, isAuthenticated);\r\n    }, [authenticationError, dispatch, accounts, accounts]);\r\n\r\n    return <>{children}</>;\r\n};\r\n\r\nexport default Authentication;\r\n","import { MsalProvider } from '@azure/msal-react';\r\nimport React from 'react';\r\nimport Router from './infrastructure/routing/Router';\r\nimport Index from \"./pages\";\r\nimport { msalConfig } from \"./dataAccess/authConfig\";\r\nimport { PublicClientApplication } from \"@azure/msal-browser\";\r\nimport Authentication from \"./components/Authentification\";\r\n\r\nconst msalInstance = new PublicClientApplication(msalConfig);\r\n\r\nfunction App() {\r\n    return (\r\n        <MsalProvider instance={msalInstance}>\r\n            <Authentication>\r\n                <Router>\r\n                    <Index/>\r\n                </Router>\r\n            </Authentication>\r\n        </MsalProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { createStore } from \"redux\";\r\nimport { reducer } from \"./appState\";\r\n\r\n// @ts-ignore\r\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport App from './App';\r\nimport './index.css';\r\nimport store from './state';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n         <App />\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}